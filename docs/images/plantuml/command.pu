@startuml
actor User

activate ":CommandSpec"
activate ":CommandWindow"
activate ":Parser"
activate ":Executor"
activate ":CommandSpec"

User -> ":CommandWindow" : Provide input
":CommandWindow" -> ":Parser" : parse()
activate ":Parser"
":Parser" -> ":Command" : Commands.getCommand(input, Context)
activate ":Command"
deactivate ":Parser"
":Parser" <-- ":Command" : Provide parameters (if ArgCommand)
note right : Only if this is an ArgCommand
activate ":Parser"
":Parser" -> ":Parser" : ArgParser.parseArgument(ArgCommand, input)
":Parser" -> ":Command" : Parse ArgCommand
":CommandWindow" <-- ":Command" : Complete parsing
deactivate ":Parser"

":CommandWindow" -> ":Executor" : execute()
":Executor" -> ":Command" : execute()
":Command" -> ":CommandSpec" : execute()
User <-- ":CommandSpec" : Provide feedback
destroy ":Command"
@enduml
