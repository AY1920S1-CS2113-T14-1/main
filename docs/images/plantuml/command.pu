@startuml
participant "Parser Logic"
participant ":ArgCommand"
participant ":ArgSpec"

activate "Parser Logic"
activate ":ArgSpec"
"Parser Logic" -> ":ArgCommand" : Construct
activate ":ArgCommand"

"Parser Logic" -> ":ArgCommand" : Request Specification
":ArgCommand" -> ":ArgSpec" : Get Specification
":ArgCommand" <-- ":ArgSpec" : Return Specification
"Parser Logic" <-- ":ArgCommand" : Return Specification

activate "Parser Logic"
"Parser Logic" -> "Parser Logic" : Parse
"Parser Logic" -> ":ArgCommand" : Load Parameters
"Parser Logic" -> ":ArgCommand" : execute()
deactivate "Parser Logic"

":ArgCommand" -> ":ArgSpec" : executeWithCmd()
note right
  This provides ArgSpec with a
  reference to ArgCommand, to 
  allow it to access switch 
  and argument values
end note
activate ":ArgSpec"
":ArgSpec" ->] : execute()
deactivate ":ArgSpec"
destroy ":ArgCommand"
@enduml
